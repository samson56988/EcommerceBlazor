@page "/admin/product-types"
@inject IProductTypeService productTypeService
@attribute [Authorize(Roles ="Admin")]
@implements IDisposable


@foreach(var productType in productTypeService.ProductTypes)
{
    @if(productType.Editing)
    {
        <EditForm Model="editingProductType" OnSubmit="UpdateProductType">
            <div class="row">
                <div class="col">
                    <InputText @bind-Value="editingProductType.Name" class="form-control"></InputText>
                </div>
                <div class="col">
                    <button type="submit" class="btn btn-primary">
                        <i class="oi oi-cloud-upload"></i>
                    </button>
                </div>
            </div>
        </EditForm>
    }
    else
    {
        <div class="row">
            <div class="col">
                @productType.Name
            </div>
             <div class="col">
                 <button class="btn-primary" @onclick="@(() => EditProductType(productType))">
                     <i class="oi oi-pencil"></i>
                 </button>
            </div>
        </div>
    }

   
}
 <button class="btn btn-primary" @onclick="CreateNewProductType">
        <i class="oi oi-plus"></i>Add new product type
    </button>


@code {
    ProductType editingProductType = null;

    protected override async Task OnInitializedAsync()
    {
        await productTypeService.GetProductTypes();
        productTypeService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        productTypeService.OnChange -= StateHasChanged;
    }

    private void EditProductType(ProductType productType)
    {
        productType.Editing = true;
        editingProductType = productType;
    }

    private void CreateNewProductType()
    {
        editingProductType = productTypeService.CreateNewProductType();
    }

    private async Task UpdateProductType()
    {
        if (editingProductType.IsNew)
            await productTypeService.AddProductType(editingProductType);

        else
            await productTypeService.UpdateProductType(editingProductType);
            editingProductType = new ProductType();
    }

}
