@page "/register"
@inject IAuthService authService


<PageTitle>Register</PageTitle>


<EditForm Model="user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator/>
    <div class="mb-3">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control"/>
        <ValidationMessage For="@(() => user.Email)"/>
    </div>
    <div class="mb-3">
        <label for="email">Password</label>
        <InputText id="password" @bind-Value="user.Password" type="password" class="form-control"/>
           <ValidationMessage For="@(() => user.Password)"/>
    </div>
    <div class="mb-3">
        <label for="email">Confirm Password</label>
        <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password"/>
    </div>
    <button type="submit" class="btn btn-primary">Register</button>
    <div class="@messageCssClass">
        <span>@Message</span>
    </div>
       <ValidationMessage For="@(() => user.ConfirmPassword)"/>
</EditForm>

@code {
    UserRegister user = new UserRegister();

    string Message = string.Empty;

    string messageCssClass = string.Empty;

    async Task HandleRegistration()
    {
        var result = await authService.Register(user);
        Message = result.Message;
        if (result.Success)
            messageCssClass = "text-success";
        else
            messageCssClass = "text-danger";

    }
}
